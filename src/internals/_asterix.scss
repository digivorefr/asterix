@charset 'UTF-8';

@mixin build($breakpoint, $options: (grid-columns-number: 0, gaps: ())) {
  $grid-columns-number: map-get($options, grid-columns-number);
  $gaps: map-get($options, gaps);

  $bp: if($breakpoint == 0, '--', --#{$breakpoint});

  // Store into scoped css3 variables propers columns parameters.
  @for $i from 1 to $grid-columns-number + 1 {
    %cols#{$bp}#{$i} {
      --columns: #{$i};
    }
    %col#{$bp}#{$i} {
      --span: #{$i};
    }
    // Columns layout.
    [data-cols*='#{$bp}#{$i}'] {
      @extend %cols#{$bp}#{$i};
    }
    // Column sizing.
    [data-col*='#{$bp}#{$i}'] {
      @extend %col#{$bp}#{$i};
    }
  }
  // Store into scoped css3 variables propers gaps parameters.
  @each $key, $value in $gaps {
    %vgap-#{$bp}#{$key} {
      --vgap: #{$value};
    }
    %hgap-#{$bp}#{$key} {
      --hgap: #{$value};
    }
    [data-gap*='#{$bp}#{$key}'] {
      @extend %vgap-#{$bp}#{$key};
      @extend %hgap-#{$bp}#{$key};
    }
    [data-vgap*='#{$bp}#{$key}'] {
      @extend %vgap-#{$bp}#{$key};
    }
    [data-hgap*='#{$bp}#{$key}'] {
      @extend %hgap-#{$bp}#{$key};
    }
  }
  // Global Layout rules.
  $displays: none, block, flex, grid;
  @each $display in $displays {
    %layout-#{$bp}#{$display} {
      --display: #{$display};
    }
    [data-layout*='#{$bp}#{$display}'] {
      @extend %layout-#{$bp}#{$display};
    }
  }
  %layout-#{$bp}auto {
    --flow: column;
  }
  [data-layout*='#{$bp}auto'] {
    @extend %layout-#{$bp}auto;
    > * {
      @extend %flex-#{$bp}auto;
    }
  }
  %layout-#{$bp}justify-space-between {
    --justify-content: space-between;
  }
  [data-layout*='#{$bp}justify-space-between'] {
    @extend %layout-#{$bp}justify-space-between;
  }

  %layout-#{$bp}justify-stretch {
    --justify-content: stretch;
  }
  [data-layout*='#{$bp}justify-stretch'] {
    @extend %layout-#{$bp}justify-stretch;
  }

  %layout-#{$bp}justify-center {
    --justify-content: center;
  }
  [data-layout*='#{$bp}justify-center'] {
    @extend %layout-#{$bp}justify-center;
  }

  %layout-#{$bp}justify-start {
    --justify-content: flex-start;
  }
  [data-layout*='#{$bp}justify-start'] {
    @extend %layout-#{$bp}justify-start;
  }

  %layout-#{$bp}justify-end {
    --justify-content: flex-end;
  }
  [data-layout*='#{$bp}justify-end'] {
    @extend %layout-#{$bp}justify-end;
  }

  %layout-#{$bp}items-stretch {
    --align-items: stretch;
  }
  [data-layout*='#{$bp}items-stretch'] {
    @extend %layout-#{$bp}items-stretch;
  }

  %layout-#{$bp}items-center {
    --align-items: center;
  }
  [data-layout*='#{$bp}items-center'] {
    @extend %layout-#{$bp}items-center;
  }

  %layout-#{$bp}items-start {
    --align-items: flex-start;
  }
  [data-layout*='#{$bp}items-start'] {
    @extend %layout-#{$bp}items-start;
  }

  %layout-#{$bp}items-end {
    --align-items: flex-end;
  }
  [data-layout*='#{$bp}items-end'] {
    @extend %layout-#{$bp}items-end;
  }

  %layout-#{$bp}self-stretch {
    --align-self: stretch;
  }
  [data-layout*='#{$bp}self-stretch'] {
    @extend %layout-#{$bp}self-stretch;
  }

  %layout-#{$bp}self-center {
    --align-self: center;
  }
  [data-layout*='#{$bp}self-center'] {
    @extend %layout-#{$bp}self-center;
  }

  %layout-#{$bp}self-start {
    --align-self: flex-start;
  }
  [data-layout*='#{$bp}self-start'] {
    @extend %layout-#{$bp}self-start;
  }

  %layout-#{$bp}self-end {
    --align-self: flex-end;
  }
  [data-layout*='#{$bp}self-end'] {
    @extend %layout-#{$bp}self-end;
  }

  // Specific Flex layout.
  // Containing layout.
  %flex-#{$bp}wrap {
    --wrap: wrap;
  }
  [data-flex*='#{$bp}wrap'] {
    @extend %flex-#{$bp}wrap;
  }
  %flex-#{$bp}no-wrap {
    --wrap: no-wrap;
  }
  [data-flex*='#{$bp}no-wrap'] {
    @extend %flex-#{$bp}no-wrap;
  }
  %flex-#{$bp}row {
    --direction: row;
  }
  [data-flex*='#{$bp}row'] {
    @extend %flex-#{$bp}row;
  }
  %flex-#{$bp}column {
    --direction: column;
  }
  [data-flex*='#{$bp}column'] {
    @extend %flex-#{$bp}column;
  }
  // Contained layout.
  %flex-#{$bp}none {
    --flex: none;
  }
  [data-flex*='#{$bp}none'] {
    @extend %flex-#{$bp}none;
  }
  %flex-#{$bp}auto {
    --flex: 1 1 auto;
  }
  [data-flex*='#{$bp}auto'] {
    @extend %flex-#{$bp}auto;
  }
}
