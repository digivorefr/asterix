/** Asterix sass framework - https://github.com/digivorefr/asterix */
/* VARIABLES */
/* Print asterix's scss variables to css3 variables */
/*
* Build a media query, mobile firstly.
* Requires at least one breakpoint value to work.
* You can use registered breakpoints (s) or absolute values (1300px).
* Highest breakpoint value will be considered as a max-width, while the other one will be min-width.
* ex. : @include --mq(s) => @media screen and (max-width:620px)
* ex. : @include --mq(s m) => @media screen and (min-width:620px) and (max-width:768px)
* ex. : @include --mq(m s) => @media screen and (max-width:768px) and (min-width:620px)
* param $bps breakpoints, space separated
* param $media the media query to output. default: screen
*/
/*
Add a specifier (--mobile for instance) to the current selector.
param $modifier modifier name
param $responsively create a specifier for each breakpoint
---
body {
  @include --spe(mobile, true) {
    background: red;
  }
}
=>
body[class*="--mobile"] {
  background: red;
}
body[class*="--xxsmobile"] {
  background: red;
}
@media screen and (min-width:376px) {
  body[class*="--xsmobile"] {
    background: red;
  }
}
@media screen and (min-width:576px) {
  body[class*="--smobile"] {
    background: red;
  }
}
...
*/
/* Allow to extend several extend on a single line */
[data-layout], body {
  --columns: 1;
  --hgap: unset;
  --vgap: unset;
  --span: 1;
  --flow: unset;
  --display: unset;
  --justify-content: unset;
  --align-items: unset;
  --align-self: unset;
}

[data-flex] {
  --wrap: unset;
  --direction: unset;
  --flex: none;
}

/* Configuration */
[data-cols*="--1"] {
  --columns: 1;
}

[data-col*="--1"] {
  --span: 1;
}

[data-cols*="--2"] {
  --columns: 2;
}

[data-col*="--2"] {
  --span: 2;
}

[data-vgap*="--default"], [data-gap*="--default"], body {
  --vgap: 0.25rem;
}

[data-hgap*="--default"], [data-gap*="--default"], body {
  --hgap: 0.25rem;
}

[data-layout*="--none"] {
  --display: none;
}

[data-layout*="--block"] {
  --display: block;
}

[data-layout*="--flex"] {
  --display: flex;
}

[data-layout*="--grid"], body {
  --display: grid;
}

[data-layout*="--auto"] {
  --flow: column;
}

[data-layout*="--justify-space-between"] {
  --justify-content: space-between;
}

[data-layout*="--justify-stretch"] {
  --justify-content: stretch;
}

[data-layout*="--justify-center"] {
  --justify-content: center;
}

[data-layout*="--justify-start"] {
  --justify-content: flex-start;
}

[data-layout*="--justify-end"] {
  --justify-content: flex-end;
}

[data-layout*="--items-stretch"] {
  --align-items: stretch;
}

[data-layout*="--items-center"] {
  --align-items: center;
}

[data-layout*="--items-start"] {
  --align-items: flex-start;
}

[data-layout*="--items-end"] {
  --align-items: flex-end;
}

[data-layout*="--self-stretch"] {
  --align-self: stretch;
}

[data-layout*="--self-center"] {
  --align-self: center;
}

[data-layout*="--self-start"] {
  --align-self: flex-start;
}

[data-layout*="--self-end"] {
  --align-self: flex-end;
}

[data-flex*="--wrap"] {
  --wrap: wrap;
}

[data-flex*="--no-wrap"] {
  --wrap: no-wrap;
}

[data-flex*="--row"] {
  --direction: row;
}

[data-flex*="--column"] {
  --direction: column;
}

[data-flex*="--none"] {
  --flex: none;
}

[data-flex*="--auto"], [data-layout*="--auto"] > * {
  --flex: 1 1 auto;
}

/* The loop... creates all required selectors for each breakpoint */
@media screen and (min-width:480px) {
  [data-cols*="--xs1"] {
    --columns: 1;
  }

  [data-col*="--xs1"] {
    --span: 1;
  }

  [data-cols*="--xs2"] {
    --columns: 2;
  }

  [data-col*="--xs2"] {
    --span: 2;
  }

  [data-vgap*="--xsdefault"], [data-gap*="--xsdefault"] {
    --vgap: 0.25rem;
  }

  [data-hgap*="--xsdefault"], [data-gap*="--xsdefault"] {
    --hgap: 0.25rem;
  }

  [data-layout*="--xsnone"] {
    --display: none;
  }

  [data-layout*="--xsblock"] {
    --display: block;
  }

  [data-layout*="--xsflex"] {
    --display: flex;
  }

  [data-layout*="--xsgrid"] {
    --display: grid;
  }

  [data-layout*="--xsauto"] {
    --flow: column;
  }

  [data-layout*="--xsjustify-space-between"] {
    --justify-content: space-between;
  }

  [data-layout*="--xsjustify-stretch"] {
    --justify-content: stretch;
  }

  [data-layout*="--xsjustify-center"] {
    --justify-content: center;
  }

  [data-layout*="--xsjustify-start"] {
    --justify-content: flex-start;
  }

  [data-layout*="--xsjustify-end"] {
    --justify-content: flex-end;
  }

  [data-layout*="--xsitems-stretch"] {
    --align-items: stretch;
  }

  [data-layout*="--xsitems-center"] {
    --align-items: center;
  }

  [data-layout*="--xsitems-start"] {
    --align-items: flex-start;
  }

  [data-layout*="--xsitems-end"] {
    --align-items: flex-end;
  }

  [data-layout*="--xsself-stretch"] {
    --align-self: stretch;
  }

  [data-layout*="--xsself-center"] {
    --align-self: center;
  }

  [data-layout*="--xsself-start"] {
    --align-self: flex-start;
  }

  [data-layout*="--xsself-end"] {
    --align-self: flex-end;
  }

  [data-flex*="--xswrap"] {
    --wrap: wrap;
  }

  [data-flex*="--xsno-wrap"] {
    --wrap: no-wrap;
  }

  [data-flex*="--xsrow"] {
    --direction: row;
  }

  [data-flex*="--xscolumn"] {
    --direction: column;
  }

  [data-flex*="--xsnone"] {
    --flex: none;
  }

  [data-flex*="--xsauto"], [data-layout*="--xsauto"] > * {
    --flex: 1 1 auto;
  }
}
[data-layout], body {
  display: var(--display);
  justify-content: var(--justify-content);
  align-items: var(--align-items);
  align-self: var(--align-self);
}
[data-layout][data-layout*="--auto"][data-layout*="--grid"], body[data-layout*="--auto"] {
  grid-auto-flow: var(--flow);
}
[data-layout][data-layout*="--auto"][data-layout*="--flex"] > *, body[data-layout*="--auto"][data-layout*="--flex"] > * {
  flex: var(--flex);
}

[data-flex] {
  flex-wrap: var(--wrap);
  flex-direction: var(--direction);
  flex: var(--flex);
}

[data-cols] {
  grid-template-columns: repeat(var(--columns), 1fr);
}

[data-col] {
  grid-column: span var(--span);
}

[data-gap], body {
  column-gap: var(--hgap);
  row-gap: var(--vgap);
}

[data-hgap] {
  column-gap: var(--hgap);
}

[data-vgap] {
  row-gap: var(--vgap);
}

body {
  /* Using variables */
  color: #000000;
  --clr-default: #000000;
  --clr-default-rgb: 0, 0, 0;
  --clr-primary: #256535;
  --clr-primary-rgb: 37, 101, 53;
  --gap-default: 0.25rem;
  --ff-default: sans-serif;
  --shape-default: 4px;
  color: var(--clr-default);
  font-family: var(--ff-default);
  /* Creating Media queries */
  /* Specifying elements */
  /* Extending Elements */
}
@media screen and (min-width:480px) {
  body {
    color: var(--primary);
  }
}
@media screen and (min-width:700px) and (max-width:999px) {
  body {
    color: blue;
  }
}
body[class*="--bordered"] {
  border: 1rem solid var(--clr-default);
}
body[class*="--padded"] {
  padding: 1rem;
}

/* Shorthands */
*[class*="--shadowed"] {
  box-shadow: 0px 0px 5px rgba(var(--clr-default-rgb), 0.1);
}

*[class*="--text-center"] {
  text-align: center;
}
@media screen and (min-width:480px) {
  *[class*="--xstext-center"] {
    text-align: center;
  }
}

*[class*="--text-left"] {
  text-align: left;
  text-align-last: left;
}
@media screen and (min-width:480px) {
  *[class*="--xstext-left"] {
    text-align: left;
    text-align-last: left;
  }
}
*[class*="--text-center"] {
  text-align: center;
  text-align-last: center;
}
@media screen and (min-width:480px) {
  *[class*="--xstext-center"] {
    text-align: center;
    text-align-last: center;
  }
}
*[class*="--text-right"] {
  text-align: right;
  text-align-last: right;
}
@media screen and (min-width:480px) {
  *[class*="--xstext-right"] {
    text-align: right;
    text-align-last: right;
  }
}
*[class*="--text-justify"] {
  text-align: justify;
}
@media screen and (min-width:480px) {
  *[class*="--xstext-justify"] {
    text-align: justify;
  }
}

/*# sourceMappingURL=basic-load.css.map */
